{"version":3,"sources":["components/fetch/fetch.js","components/HomePage/HomePage.js","components/MovieDetailsPage/Cast/Cast.js","components/MovieDetailsPage/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","components/MoviesPage/MoviesPage.js","App.js","index.js"],"names":["instance","axios","create","baseURL","params","api_key","fetchMovieCasts","id","get","HomePage","useState","fetchGetHome","setFetchGetHome","useEffect","then","className","data","results","map","e","to","original_title","name","Cast","fetchCasts","setFetchCasts","useParams","console","log","cast","i","known_for_department","src","profile_path","Reviews","fetchReviws","setFetchReviws","content","MovieDetailsPage","fetchMovieDetails","setFetchMovieDetails","useRouteMatch","path","url","backdrop_path","release_date","vote_average","overview","genres","MoviesPage","setFetchMoviesPage","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31dbfe5f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//https://developers.themoviedb.org/3\r\n\r\n//trending/get-trending // - список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n//search/search-movies // - поиск кинофильма по ключевому слову на странице фильмов.\r\n//movies/get-movie-details // - запрос полной информации о фильме для страницы кинофильма.\r\n//movies/get-movie-credits // - запрос информации о актёрском составе для страницы кинофильма.\r\n//movies/get-movie-reviews // - запрос обзоров для страницы кинофильма.\r\n\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"339fd6919ca70eae9b795e3800d9b2f5\"\r\n    }\r\n    \r\n});\r\n\r\nconst createParams = params => {\r\n    return {\r\n      params,\r\n    };\r\n  };\r\n  \r\n  export const fetchGetHomeTrending = () => {\r\n    return instance.get('/trending/all/day?');\r\n  };\r\n  \r\n  export const fetchSearchMoviesPage = (query) => {\r\n    return instance.get(\r\n      'search/movie?&language=en-US&',\r\n      createParams({ query}),\r\n    );\r\n  };\r\n  \r\n  export const fetchMovieDetailsPage = id => {\r\n    return instance.get(`/movie/${id}`);\r\n  };\r\n  \r\n  export const fetchMovieCasts = id => {\r\n    return instance.get(`/movie/${id}/credits?&language=en-US`);\r\n  };\r\n  \r\n  export const fetchMovieReviws = id => {\r\n    return instance.get(`/movie/${id}/reviews?&language=en-US`);\r\n  };","import { useState, useEffect } from 'react';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport { fetchGetHomeTrending } from '../fetch/fetch';\r\n\r\n\r\nexport default function HomePage () {\r\n\r\n  const [fetchGetHome, setFetchGetHome] = useState(null);\r\n\r\n  // const baseSource = \"https://image.tmdb.org/t/p/w500\"\r\n\r\n  useEffect(() => {\r\n    fetchGetHomeTrending().then(setFetchGetHome)\r\n  }, []);\r\n  \r\n  return (\r\n    \r\n    <>\r\n    <ul className=\"cardList\" >\r\n      {fetchGetHome?.data.results.map(\r\n          (e)=>{\r\n              return <li className=\"card\"  id={e.id}> \r\n              <NavLink to={`movie/${e.id}`}>{e.original_title || e.name}</NavLink>\r\n              {/* <img src={baseSource+e.backdrop_path}/> */}\r\n              </li>})}  \r\n    </ul>\r\n    </>\r\n  );\r\n}","import { fetchMovieCasts } from \"../../fetch/fetch\";\r\nimport { useState, useEffect } from 'react';\r\nimport { NavLink, Route, useRouteMatch, useLocation,useParams,Switch } from 'react-router-dom';\r\n\r\nconst Cast = () => {\r\n    const [fetchCasts, setFetchCasts] = useState(null);\r\n    const params = useParams()\r\n    const baseSource = \"https://image.tmdb.org/t/p/w500\"\r\n\r\n    useEffect(() => {\r\n        fetchMovieCasts(params.id).then(setFetchCasts)\r\n      }, []);\r\n    \r\n    console.log(fetchCasts?.data.cast)\r\n          \r\n    return (\r\n        <>\r\n        {fetchCasts && fetchCasts.data.cast.map(i=>{\r\n            return (<li>\r\n                         <h5>{i.name}</h5>\r\n                        <p>{i.known_for_department}</p>\r\n                       <img src={baseSource+i.profile_path}/>\r\n                   </li>)\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cast","import { fetchMovieReviws } from \"../../fetch/fetch\";\r\nimport { useState, useEffect } from 'react';\r\nimport { NavLink, Route, useRouteMatch, useLocation,useParams,Switch } from 'react-router-dom'\r\n\r\nconst Reviews = () => {\r\n    const [fetchReviws, setFetchReviws] = useState(null);\r\n    const params = useParams()\r\n    const baseSource = \"https://image.tmdb.org/t/p/w500\"\r\n\r\n    useEffect(() => {\r\n        fetchMovieReviws(params.id).then(setFetchReviws)\r\n      }, []);\r\n    \r\n    console.log(fetchReviws?.data.results.map(i=>i.content))\r\n          \r\n    return (\r\n        <>\r\n        {fetchReviws && fetchReviws.data.results.map(i=>{\r\n            return (<div><h6>Expert review : </h6> <p>{i.content}</p></div>)\r\n        })}\r\n        </>\r\n    )  \r\n}\r\n\r\nexport default Reviews","import { useState, useEffect } from 'react';\r\nimport { NavLink, Route, useRouteMatch, useLocation,useParams,Switch } from 'react-router-dom';\r\nimport { fetchMovieDetailsPage } from '../fetch/fetch';\r\nimport Cast from './Cast/Cast';\r\nimport Reviews from './Reviews/Reviews';\r\n\r\n\r\nexport default function MovieDetailsPage () {\r\n\r\n  const [fetchMovieDetails, setFetchMovieDetails] = useState(null);\r\n  const baseSource = \"https://image.tmdb.org/t/p/w500\"\r\n\r\n  const params = useParams()\r\n  const {path, url} = useRouteMatch()\r\n  console.log(path)\r\n  useEffect(() => {\r\n    fetchMovieDetailsPage(params.id).then(setFetchMovieDetails)\r\n  }, []);\r\n  \r\n  // console.log(fetchMovieDetails?.data)\r\n\r\n\r\n  return (\r\n    //rout cast rout reviews\r\n    <>\r\n    {fetchMovieDetails?.data && \r\n    <div>\r\n      <img src={baseSource+fetchMovieDetails.data.backdrop_path}/>\r\n      <h1>{fetchMovieDetails.data.original_title || fetchMovieDetails.data.name} ({fetchMovieDetails.data.release_date})</h1>\r\n      <p>User vote : {fetchMovieDetails.data.vote_average}</p>\r\n      <h2>Overview:</h2> <p>{fetchMovieDetails.data.overview}</p>\r\n      <h3>Genres</h3>\r\n      <p>{fetchMovieDetails.data.genres.map((e)=>{return <span> {e.name} </span>})}</p>\r\n    </div>\r\n    }\r\n    {<div>\r\n      <p>Additional information</p>\r\n      <ul>\r\n         <NavLink to={`${url}/Cast`}><li>Cast</li></NavLink>\r\n         <NavLink to={`${url}/Reviews`}><li>Reviews</li></NavLink>\r\n      </ul>\r\n    </div>}\r\n    <Switch>\r\n      <Route path={`${path}/Cast`}>\r\n        <Cast/>\r\n      </Route>\r\n      <Route path={`${path}/Reviews`}>\r\n        <Reviews/>\r\n      </Route>\r\n    </Switch>\r\n        </>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\n// import { NavLink, Route, useRouteMatch } from 'react-router-dom';\r\nimport { fetchMovieCasts } from '../fetch/fetch';\r\n\r\n\r\nexport default function MoviesPage () {\r\n\r\n  const [fetchMoviesPage, setFetchMoviesPage] = useState(null);\r\n  const baseSource = \"https://image.tmdb.org/t/p/w500\"\r\n\r\n  useEffect(() => {\r\n    fetchMovieCasts().then(setFetchMoviesPage)\r\n  }, []);\r\n \r\n\r\n  // console.log(fetchMovieDetails && fetchMovieDetails?)\r\n\r\n  return (\r\n    \r\n    <>\r\n    <p>credits</p>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport MovieDetailsPage from \"./components/MovieDetailsPage/MovieDetailsPage\";\r\nimport MoviesPage from \"./components/MoviesPage/MoviesPage\";\r\n\r\nfunction App() {\r\n  return (\r\n  <>\r\n  <Switch>\r\n  <Route path=\"/\" exact>\r\n    <HomePage />\r\n  </Route>\r\n\r\n  <Route path=\"/movie\" exact>\r\n    <MoviesPage />\r\n  </Route>\r\n\r\n  <Route path=\"/movie/:id\">\r\n    <MovieDetailsPage />\r\n  </Route>\r\n\r\n</Switch>\r\n</>\r\n)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}