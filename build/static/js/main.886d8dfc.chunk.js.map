{"version":3,"sources":["components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/InputForm/InputForm.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["ContactList","filteredContacts","deleteContact","map","e","name","number","onClick","id","FilterContacts","filtered","type","placeholder","onChange","InputForm","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","handleChange","target","value","onSubmit","preventDefault","length","generate","newName","includes","alert","singleContact","pattern","title","required","toLowerCase","filterContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEaA,EAAc,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAG3C,OAEY,mCACED,GACD,qCACD,0CACA,6BAAKA,EAAiBE,KAAI,SAAAC,GAAC,OAC3B,+BAAgBA,EAAEC,KAAlB,MAA2BD,EAAEE,OAC7B,wBAAQC,QAAS,kBAAIL,EAAcE,EAAEI,KAArC,sBADSJ,EAAEI,eCTdC,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC7B,OAEI,qCACG,uDACE,uBACAC,KAAK,OACLN,KAAK,SACLO,YAAY,eACZC,SAAUH,QCNtB,IA+EeI,EA/EE,WAGhB,MCPc,SAAyBC,EAAKC,GAC3C,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,GDFgBI,CAAgB,WAAY,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAyBb,mBAAS,CAC/BZ,KAAM,GACN0B,OAAQ,GACRzB,OAAQ,KAHX,mBAAOiB,EAAP,KAAaC,EAAb,KAKOQ,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBT,EAAS,2BAAID,GAAL,kBACLU,EAAO5B,KAAO4B,EAAOC,UAkCxB,OAAQ,qCACJ,uBAAMC,SA9BS,SAAC/B,GACpBA,EAAEgC,iBACF,IAAO/B,EAAgBkB,EAAhBlB,KAAMC,EAAUiB,EAAVjB,OACb,GAAwB,IAApBuB,EAASQ,OAAe,OAAOP,EAAY,CAAC,CAACtB,GAAI8B,cACnDjC,OACAC,YACF,IAAMiC,EAAUV,EAAS1B,KAAI,SAAAC,GAAC,OAAGA,EAAEC,QACnC,GAAIkC,EAAQC,SAASpC,EAAE6B,OAAO5B,KAAK6B,OAAQ,OAAOO,MAAM,GAAD,OAAIrC,EAAE6B,OAAO5B,KAAK6B,MAAlB,0BACvD,IAAMQ,EAAgB,CACpBlC,GAAI8B,cACJjC,OACAC,UAEFwB,EAAY,GAAD,mBAAKD,GAAL,CAAea,MAiBtB,UACE,2CACA,sCACA,uBACE/B,KAAK,OACLN,KAAK,OACLsC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRhC,SAAUmB,IAEZ,wCACD,uBACGrB,KAAK,MACLN,KAAK,SACLsC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRhC,SAAUmB,IAEZ,wBAAQrB,KAAK,SAAb,4BAGA,cAAC,EAAD,CAAgBD,SAhCH,SAAC,GAAc,IAAbuB,EAAY,EAAZA,OAErBT,EAAS,2BAAID,GAAL,IAAYQ,OAAOE,EAAOC,YAiC5B,cAAC,EAAD,CAAajC,iBAxCE,SAACG,GACtB,GAAwB,IAApByB,EAASQ,OACb,OAAOR,EAASE,QAAO,SAAC3B,GAAD,OAAOA,EAAEC,KAAKyC,cAAcN,SAASjB,EAAMQ,WAsC7BgB,GAAkB7C,cA/BnC,SAACM,GACtBsB,EAAYD,EAASE,QAAO,SAAA3B,GAAC,OAAEA,EAAEI,KAAMA,aEzC3BwC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.886d8dfc.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nexport const ContactList = ({filteredContacts, deleteContact }) => {\r\n    // console.log(filteredContacts)\r\n   \r\n    return ( \r\n           \r\n                <> \r\n                 {filteredContacts && \r\n                 <> \r\n                <h3>Contacts</h3>\r\n                <ul>{filteredContacts.map(e => \r\n                <li key={e.id}>{e.name} : {e.number} \r\n                <button onClick={()=>deleteContact(e.id)}>Delete</button></li>)    \r\n                }</ul>\r\n                 </>}\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nContactList.propTypes={\r\n    filteredContacts:PropTypes.arrayOf(Object).isRequired,\r\n    deleteContact:PropTypes.func.isRequired,\r\n  }","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const FilterContacts = ({filtered}) => {\r\n   return(\r\n      \r\n       <>\r\n          <h2>Find contacts by name</h2>\r\n            <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            placeholder=\"start typing\"\r\n            onChange={filtered}\r\n            />\r\n            </>)\r\n}\r\n\r\nFilterContacts.propTypes={\r\n   filtered:PropTypes.func.isRequired\r\n}","import { useState } from 'react';\r\nimport { v4 as generate } from 'uuid';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { FilterContacts } from './FilterContacts/FilterContacts';\r\nimport useLocalStorage from '../../hooks/useLocalStorage'\r\n\r\nconst InputForm =() => {\r\n\r\n\r\n const [contacts, setContacts] = useLocalStorage('contacts', '');\r\n const [state,setState] = useState({\r\n    name: '',\r\n    filter: '',\r\n    number: '',    \r\n  })\r\n  const handleChange = ({ target }) => {\r\n    setState({...state,\r\n      [target.name]: target.value,\r\n    });\r\n   \r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {name, number} = state\r\n    if (contacts.length === 0) {return setContacts([{id: generate(),\r\n      name,\r\n      number,}])}\r\n    const newName = contacts.map(e=> e.name)\r\n    if (newName.includes(e.target.name.value)){return alert(`${e.target.name.value} says hello from chat`)}\r\n    const singleContact = {\r\n      id: generate(),\r\n      name,\r\n      number,\r\n    }\r\n    setContacts([...contacts, singleContact])\r\n    \r\n  }\r\n  const filterContacts = (e) => {\r\n    if (contacts.length === 0) {return}\r\n    return contacts.filter((e) => e.name.toLowerCase().includes(state.filter))\r\n  }\r\n\r\n  const changiFilter = ({target}) => {\r\n  \r\n    setState({...state, filter:target.value})\r\n  }\r\n  const deleteContact = (id) => {\r\n   setContacts(contacts.filter(e=>e.id !==id))\r\n  }\r\n\r\n    return (<>\r\n        <form onSubmit={handleSubmit}>\r\n          <h1>Phonebook</h1>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <h2>Number</h2>\r\n         <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n          </form>\r\n          \r\n          <FilterContacts filtered={changiFilter} />\r\n          \r\n          \r\n          <ContactList filteredContacts={filterContacts()} deleteContact={deleteContact}/>\r\n        </>\r\n\r\n    )\r\n  \r\n}\r\n\r\nexport default InputForm","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\n","import React from \"react\";\r\nimport InputForm from \"./components/InputForm/InputForm\";\r\n\r\nfunction App() {\r\n  return <InputForm />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}