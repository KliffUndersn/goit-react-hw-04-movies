{"version":3,"sources":["components/fetch/fetch.js","components/HomePage/HomePage.js","components/MovieDetailsPage/Cast/Cast.js","components/MovieDetailsPage/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","components/MoviesPage/MoviesPage.js","components/NavBar/NavBar.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","params","api_key","HomePage","useState","fetchGetHome","setFetchGetHome","useEffect","get","then","className","data","results","map","e","to","pathname","id","state","original_title","name","src","backdrop_path","alt","Cast","fetchCasts","setFetchCasts","useParams","cast","i","known_for_department","profile_path","Reviews","fetchReviws","setFetchReviws","content","MovieDetailsPage","fetchMovieDetails","setFetchMovieDetails","history","useHistory","location","useLocation","useRouteMatch","path","url","searchCheck","URLSearchParams","search","userPath","type","onClick","push","release_date","vote_average","overview","genres","MoviesPage","fetchMoviesPage","setFetchMoviesPage","searchValue","setSearchValue","searchQuery","setSearchQuery","query","console","log","onSubmit","preventDefault","autoComplete","autoFocus","placeholder","onChange","target","value","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7234d98d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key: '339fd6919ca70eae9b795e3800d9b2f5',\r\n  },\r\n});\r\n\r\nconst createParams = params => {\r\n  return {\r\n    params,\r\n  };\r\n};\r\n\r\nexport const fetchGetHomeTrending = () => {\r\n  return instance.get('/trending/all/day?');\r\n};\r\n\r\nexport const fetchSearchMoviesPage = query => {\r\n  return instance.get('search/movie?&language=en-US&', createParams({ query }));\r\n};\r\n\r\nexport const fetchMovieDetailsPage = id => {\r\n  return instance.get(`/movie/${id}`);\r\n};\r\n\r\nexport const fetchMovieCasts = id => {\r\n  return instance.get(`/movie/${id}/credits?&language=en-US`);\r\n};\r\n\r\nexport const fetchMovieReviws = id => {\r\n  return instance.get(`/movie/${id}/reviews?&language=en-US`);\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { fetchGetHomeTrending } from '../fetch/fetch';\r\n\r\nexport default function HomePage() {\r\n  const [fetchGetHome, setFetchGetHome] = useState(null);\r\n\r\n  const baseSource = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  useEffect(() => {\r\n    fetchGetHomeTrending().then(setFetchGetHome);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {fetchGetHome?.data.results.map(e => {\r\n          return (\r\n            <li className=\"ImageGalleryItem\" key={e.id}>\r\n              <NavLink to={{ pathname: `movie/${e.id}`, state: 'fromHome' }}>\r\n                <h1 className=\"Searchbar \">{e.original_title || e.name}</h1>\r\n                <img\r\n                  src={baseSource + e.backdrop_path}\r\n                  alt=\"\"\r\n                  className=\"ImageGalleryItem-image\"\r\n                />\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\n// state: location.pathname,\r\n","import { fetchMovieCasts } from '../../fetch/fetch';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nconst Cast = () => {\r\n  const [fetchCasts, setFetchCasts] = useState(null);\r\n  const params = useParams();\r\n  const baseSource = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  useEffect(() => {\r\n    fetchMovieCasts(params.id).then(setFetchCasts);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {fetchCasts &&\r\n          fetchCasts.data.cast.map(i => {\r\n            return (\r\n              <li key={i.id} className=\"ImageGalleryItem\">\r\n                <h5>{i.name}</h5>\r\n                <p>{i.known_for_department}</p>\r\n                <img\r\n                  alt=\"\"\r\n                  src={baseSource + i.profile_path}\r\n                  className=\"ImageGalleryItem-image\"\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { fetchMovieReviws } from '../../fetch/fetch';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nconst Reviews = () => {\r\n  const [fetchReviws, setFetchReviws] = useState(null);\r\n  const params = useParams();\r\n  //   const baseSource = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviws(params.id).then(setFetchReviws);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {fetchReviws &&\r\n        fetchReviws.data.results.map(i => {\r\n          return (\r\n            <div key={i.id}>\r\n              <h6>Expert review : </h6> <p>{i.content}</p>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useParams,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport { fetchMovieDetailsPage } from '../fetch/fetch';\r\nimport Cast from './Cast/Cast';\r\nimport Reviews from './Reviews/Reviews';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [fetchMovieDetails, setFetchMovieDetails] = useState(null);\r\n  const baseSource = 'https://image.tmdb.org/t/p/w500';\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n  const { path, url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetailsPage(params.id).then(setFetchMovieDetails);\r\n  }, []);\r\n\r\n  const searchCheck = new URLSearchParams(location.search).get('search');\r\n  const userPath = history?.location?.state;\r\n\r\n  const goBack = () => {\r\n    if (location.state === 'fromHome') {\r\n      history.push('/');\r\n    }\r\n    if (searchCheck) {\r\n      if (!userPath) {\r\n        history.push({ pathname: '/movie', search: `search=${searchCheck}` });\r\n      }\r\n      history.push({ pathname: userPath, search: `search=${searchCheck}` });\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={goBack} className=\"Button\">\r\n        Go back\r\n      </button>\r\n      {fetchMovieDetails?.data && (\r\n        <div key={1}>\r\n          <img alt=\"\" src={baseSource + fetchMovieDetails.data.backdrop_path} />\r\n          <h1>\r\n            {fetchMovieDetails.data.original_title ||\r\n              fetchMovieDetails.data.name}{' '}\r\n            ({fetchMovieDetails.data.release_date})\r\n          </h1>\r\n          <p>User vote : {fetchMovieDetails.data.vote_average}</p>\r\n          <h2>Overview:</h2> <p>{fetchMovieDetails.data.overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>\r\n            {fetchMovieDetails.data.genres.map(e => {\r\n              return <span key={e.id}> {e.name} </span>;\r\n            })}\r\n          </p>\r\n        </div>\r\n      )}\r\n      {\r\n        <div key={2}>\r\n          <p>Additional information</p>\r\n          <ul>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/Cast`,\r\n                search: searchCheck && `search=${searchCheck}`,\r\n              }}\r\n            >\r\n              <li>Cast</li>\r\n            </NavLink>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/Reviews`,\r\n                search: searchCheck && `search=${searchCheck}`,\r\n              }}\r\n            >\r\n              <li>Reviews</li>\r\n            </NavLink>\r\n          </ul>\r\n        </div>\r\n      }\r\n      <Switch>\r\n        <Route path={`${path}/Cast`}>\r\n          <Cast />\r\n        </Route>\r\n        <Route path={`${path}/Reviews`}>\r\n          <Reviews />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  NavLink,\r\n  Route,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { fetchSearchMoviesPage } from '../fetch/fetch';\r\n\r\nexport default function MoviesPage() {\r\n  const [fetchMoviesPage, setFetchMoviesPage] = useState(null);\r\n  const baseSource = 'https://image.tmdb.org/t/p/w500';\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const searchCheck = new URLSearchParams(location.search).get('search');\r\n  useEffect(() => {\r\n    console.log(searchCheck);\r\n    if (searchCheck) {\r\n      setSearchQuery(searchCheck);\r\n    }\r\n    if (searchQuery) {\r\n      fetchSearchMoviesPage(searchQuery).then(setFetchMoviesPage);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `search=${searchValue}`,\r\n    });\r\n    console.log(history);\r\n    setSearchQuery(searchValue);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    return setSearchValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          className=\"searchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus={true}\r\n          placeholder=\"Search film\"\r\n          onChange={handleChange}\r\n          value={searchValue}\r\n        />\r\n      </form>\r\n\r\n      <ul className=\"ImageGallery\">\r\n        {fetchMoviesPage?.data.results.map(e => {\r\n          return (\r\n            <li className=\"ImageGalleryItem\" key={e.id}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: `movie/${e.id}`,\r\n                  state: location.pathname,\r\n                  search: `search=${searchValue || searchCheck}`,\r\n                }}\r\n              >\r\n                <h1 className=\"Searchbar \">{e.original_title || e.name}</h1>\r\n\r\n                <img src={baseSource + e.backdrop_path} alt=\"\" />\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <h3 className=\"Navbar\">\r\n        <NavLink className=\"Navbar\" to={`/`}>\r\n          HomePage{' '}\r\n        </NavLink>\r\n        <NavLink className=\"Navbar\" to={`/movie`}>\r\n          {' '}\r\n          Search\r\n        </NavLink>\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport MovieDetailsPage from \"./components/MovieDetailsPage/MovieDetailsPage\";\r\nimport MoviesPage from \"./components/MoviesPage/MoviesPage\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n  <>\r\n   <NavBar/>\r\n  \r\n  <Switch> \r\n  <Route path=\"/\" exact>\r\n    <HomePage />\r\n  </Route>\r\n\r\n  <Route path=\"/movie\" exact>\r\n    <MoviesPage />\r\n  </Route>\r\n\r\n  <Route path=\"/movie/:id\">\r\n    <MovieDetailsPage />\r\n  </Route>\r\n\r\n</Switch>\r\n</>\r\n)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}